//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace variantgenerator_script.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskVariantDto", Namespace="http://schemas.datacontract.org/2004/07/GraphLabs.WcfServices.Data")]
    [System.SerializableAttribute()]
    public partial class TaskVariantDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneratorVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneratorVersion {
            get {
                return this.GeneratorVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneratorVersionField, value) != true)) {
                    this.GeneratorVersionField = value;
                    this.RaisePropertyChanged("GeneratorVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IVariantGenService")]
    public interface IVariantGenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVariantGenService/GetVariant", ReplyAction="http://tempuri.org/IVariantGenService/GetVariantResponse")]
        variantgenerator_script.ServiceReference.TaskVariantDto GetVariant(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVariantGenService/GetVariant", ReplyAction="http://tempuri.org/IVariantGenService/GetVariantResponse")]
        System.Threading.Tasks.Task<variantgenerator_script.ServiceReference.TaskVariantDto> GetVariantAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVariantGenService/SaveVariant", ReplyAction="http://tempuri.org/IVariantGenService/SaveVariantResponse")]
        void SaveVariant(variantgenerator_script.ServiceReference.TaskVariantDto info, long taskId, bool updateExistent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVariantGenService/SaveVariant", ReplyAction="http://tempuri.org/IVariantGenService/SaveVariantResponse")]
        System.Threading.Tasks.Task SaveVariantAsync(variantgenerator_script.ServiceReference.TaskVariantDto info, long taskId, bool updateExistent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVariantGenServiceChannel : variantgenerator_script.ServiceReference.IVariantGenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VariantGenServiceClient : System.ServiceModel.ClientBase<variantgenerator_script.ServiceReference.IVariantGenService>, variantgenerator_script.ServiceReference.IVariantGenService {
        
        public VariantGenServiceClient() {
        }
        
        public VariantGenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VariantGenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VariantGenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VariantGenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public variantgenerator_script.ServiceReference.TaskVariantDto GetVariant(long id) {
            return base.Channel.GetVariant(id);
        }
        
        public System.Threading.Tasks.Task<variantgenerator_script.ServiceReference.TaskVariantDto> GetVariantAsync(long id) {
            return base.Channel.GetVariantAsync(id);
        }
        
        public void SaveVariant(variantgenerator_script.ServiceReference.TaskVariantDto info, long taskId, bool updateExistent) {
            base.Channel.SaveVariant(info, taskId, updateExistent);
        }
        
        public System.Threading.Tasks.Task SaveVariantAsync(variantgenerator_script.ServiceReference.TaskVariantDto info, long taskId, bool updateExistent) {
            return base.Channel.SaveVariantAsync(info, taskId, updateExistent);
        }
    }
}
